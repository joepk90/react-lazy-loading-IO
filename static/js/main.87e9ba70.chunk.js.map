{"version":3,"sources":["logo.svg","components/common/LazyLoadObserver.js","App.js","reportWebVitals.js","index.js"],"names":["LazyLoadObserver","children","useInView","triggerOnce","threshold","ref","inView","entry","class","fallback","className","Card","lazy","App","src","logo","alt","href","target","rel","style","maxWidth","margin","title","text","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,G,KAAA,IAA0B,kC,sBC4B1BA,EAxBU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEzB,EAA+BC,YAAU,CAEvCC,aAAa,EACbC,UAAW,IAHLC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAAb,EAAqBC,MAMrB,OACE,qBAAKF,IAAKA,EAAKG,MAAM,qBAArB,SACGF,GACC,cAAC,WAAD,CAAUG,SACR,qBAAKC,UAAU,gBAAf,mDADF,SAKGT,OChBLU,EAAOC,gBAAK,kBAAM,gCAoCTC,MAlCf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKI,IAAKC,EAAML,UAAU,WAAWM,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEN,UAAU,WACVO,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,4BAUF,sBAAMC,MAAO,CAACC,SAAU,QAASC,OAAQ,QAAzC,SACE,8hBAGF,cAAC,EAAD,UACE,cAACX,EAAD,CACEY,MAAM,aACNC,KAAK,uIACLC,MAAM,0CCpBDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.87e9ba70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport {Suspense} from 'react';\n\nconst LazyLoadObserver = ({children}) => {\n\n  const { ref, inView, entry } = useInView({\n    /* Optional options */\n    triggerOnce: true,\n    threshold: 0,\n  });\n\n  return (\n    <div ref={ref} class=\"lazy-load-observer\">\n      {inView && (\n        <Suspense fallback={\n          <div className=\"lazy-fallback\">\n            Fallback: Failed to load component...\n          </div>\n        }>\n          {children}\n        </Suspense>\n      )}\n\n    </div>\n  );\n};\n\nexport default LazyLoadObserver;","import logo from './logo.svg';\nimport './App.css';\nimport LazyLoadObserver from './components/common/LazyLoadObserver';\nimport {lazy} from 'react';\nconst Card = lazy(() => import('./components/Card'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n      <main style={{maxWidth: '300px', margin: 'auto'}}>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis aliquam ullamcorper imperdiet. Donec vitae nunc egestas, malesuada arcu eget, blandit est. Proin sit amet justo eros. Donec sed tristique enim. Proin lorem libero, placerat sit amet urna vitae, consectetur lacinia eros. Aliquam nec ornare justo, vitae pharetra est. Quisque ultrices arcu vel dui porttitor, sed maximus dolor aliquet. Sed sollicitudin, sapien et posuere finibus, purus est tristique mauris, vel pellentesque neque erat vel justo.</p>\n      </main>\n\n      <LazyLoadObserver>\n        <Card\n          title=\"Card Title\"\n          text=\"I have been Lazy Loaded using the Intersection Observer. Reload the page, open your network tab and see my requests when you scroll!\"\n          image=\"https://via.placeholder.com/150\"\n        />\n      </LazyLoadObserver>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}